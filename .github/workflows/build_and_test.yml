name: Build and test
on:
  pull_request:
    branches:
      - master
      - r[0-9]+.[0-9]+
  push:
    branches:
      - master
      - r[0-9]+.[0-9]+
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}-${{ github.event_name == 'schedule' }}
  cancel-in-progress: true

jobs:
  # This job calls the reusable workflow to check for relevant changes
  check_relevant_changes:
    name: Check Relevant File Changes
    uses: ./.github/workflows/_check_relevant_changes.yml
    with:
      event_name: ${{ github.event_name }}
      # For pull_request, use PR's base and head. For push, use event's before and sha.
      base_sha: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
      head_sha: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
    secrets: inherit # Good practice, though not used by this specific reusable workflow

  get-torch-commit:
    runs-on: ubuntu-24.04
    needs: [check_relevant_changes] # Depends on the check
    # Only run if code changes detected
    if: needs.check_relevant_changes.outputs.has_code_changes == 'true'
    outputs:
      torch_commit: ${{ steps.commit.outputs.torch_commit }}
    steps:
      - id: commit
        name: Get latest torch commit
        run: |
          echo "torch_commit=$(git ls-remote https://github.com/pytorch/pytorch.git HEAD | awk '{print $1}')" >> "$GITHUB_OUTPUT"

  build-torch-xla:
    name: "Build PyTorch/XLA"
    uses: ./.github/workflows/_build_torch_xla.yml
    needs: [get-torch-commit, check_relevant_changes]
    # Only run if code changes detected
    if: needs.check_relevant_changes.outputs.has_code_changes == 'true'
    with:
      dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_tpuvm
      torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
      timeout-minutes: 240
    secrets:
      gcloud-service-key: ${{ secrets.GCLOUD_SERVICE_KEY }}

  build-torch-with-cuda:
    name: "Build PyTorch with CUDA"
    uses: ./.github/workflows/_build_torch_with_cuda.yml
    needs: [get-torch-commit, check_relevant_changes]
    # Only run if code changes detected
    if: needs.check_relevant_changes.outputs.has_code_changes == 'true'
    with:
      # TODO: bump CUDA version to either 12.4 or 12.6 (supported by PyTorch). 
      # Ref: https://github.com/pytorch/xla/issues/8700
      dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_cuda_12.3
      torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
      # note that to build a torch wheel with CUDA enabled, we do not need a GPU runner.
      runner: linux.24xlarge
      timeout-minutes: 120

  build-cuda-plugin:
    name: "Build XLA CUDA plugin"
    uses: ./.github/workflows/_build_plugin.yml
    needs: [check_relevant_changes]
    # Only run if code changes detected
    if: needs.check_relevant_changes.outputs.has_code_changes == 'true'
    with:
      dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_cuda_12.3
    secrets:
      gcloud-service-key: ${{ secrets.GCLOUD_SERVICE_KEY }}

  test-python-cpu:
    name: "CPU tests"
    uses: ./.github/workflows/_test.yml
    needs: [build-torch-xla, get-torch-commit, check_relevant_changes]
    # Only run if code changes detected
    if: needs.check_relevant_changes.outputs.has_code_changes == 'true'
    with:
      dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_tpuvm
      timeout-minutes: 120
      collect-coverage: false
      torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
    secrets:
      gcloud-service-key: ${{ secrets.GCLOUD_SERVICE_KEY }}

  test-cuda:
    name: "GPU tests"
    uses: ./.github/workflows/_test.yml
    needs: [build-torch-xla, build-cuda-plugin, get-torch-commit, check_relevant_changes]
    # Only run if code changes detected
    if: needs.check_relevant_changes.outputs.has_code_changes == 'true'
    with:
      dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_cuda_12.3
      runner: linux.g4dn.12xlarge.nvidia.gpu
      timeout-minutes: 300
      collect-coverage: false
      install-cuda-plugin: true
      torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
    secrets:
      gcloud-service-key: ${{ secrets.GCLOUD_SERVICE_KEY }}

  test-cuda-with-pytorch-cuda-enabled:
    name: "GPU tests requiring torch CUDA"
    uses: ./.github/workflows/_test_requiring_torch_cuda.yml
    needs: [build-torch-with-cuda, build-torch-xla, build-cuda-plugin, get-torch-commit, check_relevant_changes]
    # Only run if code changes detected
    if: needs.check_relevant_changes.outputs.has_code_changes == 'true'
    with:
      dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_cuda_12.3
      runner: linux.8xlarge.nvidia.gpu
      timeout-minutes: 300
      collect-coverage: false
      torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}

  test-tpu:
    name: "TPU tests"
    uses: ./.github/workflows/_tpu_ci.yml
    needs: [build-torch-xla, check_relevant_changes]
    # Only run if code changes detectedif: >
      (github.event_name == 'push' || github.event_name == 'pull_request') &&
      needs.check_relevant_changes.outputs.has_code_changes == 'true'
    with:
      timeout-minutes: 300

  push-docs:
    name: "Build docs"
    uses: ./.github/workflows/_docs.yml
    needs: build-torch-xla
    with:
      dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_tpuvm
    secrets:
      torchxla-bot-token: ${{ secrets.TORCH_XLA_BOT_TOKEN }}
